#include<stdio.h>
#include<iostream>
#include<algorithm>
#include<queue>
using namespace std;

long n,t,test,ans=0;
bool flag=false,judge=false;
pair<long,long> itv[25005];
queue<pair<long,long>> que;

bool cmp(pair<long,long> a,pair<long,long> b){
    if (a.first!=b.first)
    {
        return a.first<b.first;
    }
    else
    {
        return a.second>=b.second;
    }
}

bool solve(long start,long end){
    for (long i = 0; i < n; i++)
    {
        if (start>=end)
        {
            return false;
        }
        if (itv[i].first<=start+1)
        {        
            if (itv[i].second>test)
            {
                test=itv[i].second;
                judge=true;
            }
            if (itv[i+1].first>start+1&&judge)
            {
                ans++;
                start=test;
                judge=false;
            }
        }
    }
    if (start>=end)
    {
        return false;
    }
    else{ return true; }
}
int main(){
    scanf("%d%d",&n,&t);
    for (long i = 0; i < n; i++)
    {
        scanf("%d%d",&itv[i].first,&itv[i].second);
    }
    itv[n].first=0x7fffffff;
    sort(itv,itv+n,cmp);
    flag=solve(0,t);
    if (flag)
    {
        printf("-1\n");
    }
    else { printf("%d", ans); }
    return 0;
}
